networks:
  red_usuarios:
    driver: bridge
    name: chemait_red_usuarios
    ipam:
      config:
        - subnet: 192.168.10.0/24
  red_servidores:
    driver: bridge
    name: chemait_red_servidores
    ipam:
      config:
        - subnet: 192.168.20.0/24
  red_dmz:
    driver: bridge
    name: chemait_red_dmz
    ipam:
      config:
        - subnet: 192.168.30.0/24
  red_admin:
    driver: bridge
    name: chemait_red_admin
    ipam:
      config:
        - subnet: 192.168.40.0/24

services:

  servicios_internos:
    image: ubuntu:latest
    container_name: servicios_internos
    privileged: true
    networks:
      red_servidores:
        ipv4_address: 192.168.20.10
    command: >
      bash -c "apt update &&
               apt install -y net-tools iputils-ping curl iproute2 &&
               bash /routes/red_servidores_routes.sh &&
               tail -f /dev/null"
    volumes:
      - docker-interno:/var/lib/docker
      - ./routes:/routes:ro
    restart: always

  servidor_backup:
    image: ubuntu:latest
    container_name: servidor_backup
    privileged: true
    networks:
      red_servidores:
        ipv4_address: 192.168.20.20
    command: >
      bash -c "apt update &&
               apt install -y rsync net-tools iputils-ping curl iproute2 &&
               bash /routes/red_servidores_routes.sh &&
               tail -f /dev/null"
    volumes:
      - docker-interno:/var/lib/docker
      - ./routes:/routes:ro
    restart: always

  servicios_externos:
    image: ubuntu:latest
    container_name: servicios_externos
    privileged: true
    networks:
      red_dmz:
        ipv4_address: 192.168.30.10
    command: >
      bash -c "apt update &&
               apt install -y nginx net-tools iputils-ping curl iproute2 &&
               service nginx start &&
               bash /routes/red_dmz_routes.sh &&
               tail -f /dev/null"
    volumes:
      - docker-externo:/var/lib/docker
      - ./routes:/routes:ro
    ports:
      - "80:80"
    restart: always

  cliente:
    image: ubuntu:latest
    container_name: cliente
    privileged: true
    networks:
      red_usuarios:
        ipv4_address: 192.168.10.10
    command: >
      bash -c "apt update &&
               apt install -y net-tools iputils-ping curl iproute2 &&
               bash /routes/red_usuarios_routes.sh &&
               tail -f /dev/null"
    volumes:
      - ./routes:/routes:ro
    restart: always

  admin_test:
    image: ubuntu:latest
    container_name: admin_test
    privileged: true
    networks:
      red_admin:
        ipv4_address: 192.168.40.20
    command: >
      bash -c "apt update &&
               apt install -y net-tools iputils-ping curl htop iproute2 &&
               bash /routes/red_admin_routes.sh &&
               tail -f /dev/null"
    volumes:
      - ./routes:/routes:ro
    restart: always

  firewall:
    image: ubuntu:latest
    container_name: firewall
    privileged: true
    networks:
      red_usuarios:
        ipv4_address: 192.168.10.1
      red_servidores:
        ipv4_address: 192.168.20.1
      red_dmz:
        ipv4_address: 192.168.30.1
      red_admin:
        ipv4_address: 192.168.40.1
    command: >
      bash -c "apt update &&
               apt install -y iptables iproute2 net-tools iputils-ping curl &&
               sysctl -w net.ipv4.ip_forward=1 &&
               bash /routes/firewall_rules.sh &&
               tail -f /dev/null"
    volumes:
      - ./routes:/routes:ro
    restart: always

volumes:
  docker-interno:
  docker-externo:
